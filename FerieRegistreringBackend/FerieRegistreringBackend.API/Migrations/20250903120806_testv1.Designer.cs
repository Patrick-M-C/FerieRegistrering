// <auto-generated />
using System;
using FerieRegistreringBackend.Repository.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FerieRegistreringBackend.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250903120806_testv1")]
    partial class testv1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LeaderUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TimeEntries");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateOnly(1995, 5, 12),
                            Email = "niklas@example.com",
                            IsActive = true,
                            LastName = "Hansen",
                            Name = "Niklas",
                            Password = "AQAAAAIAAYagAAAAEGU2X5virsaYduePQ9+lqbYZy3hDiFecSruFm9GBw8fwuR8uHT6FnVkd64QxWm5Oag==",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateOnly(1980, 5, 19),
                            Email = "frygtsommehund@example.com",
                            IsActive = true,
                            LastName = "Hund",
                            Name = "Frygtløss",
                            Password = "AQAAAAIAAYagAAAAEONVbZUhQc+iw5Vv9mlJROEzGrpRTVpG94PD4H80KPcfKaTzbdEGPAeIYjiMZm4Kew==",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateOnly(1956, 5, 12),
                            Email = "homer.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Homer",
                            Password = "AQAAAAIAAYagAAAAEB3b33zhR1mGF024RvqjCzA6m3mZGMvr2fQ6KIM1S8z45r4pSe+2VzaP1MWBYrYRoQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateOnly(1966, 7, 1),
                            Email = "peter.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Peter",
                            Password = "AQAAAAIAAYagAAAAEEYeI3t3mJ2wQlRJbXs0PeldLgFvaVny4PatWKgQoEpP8jl9EEfzBZ/lFjhAgwlY4A==",
                            Role = 1
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateOnly(1999, 5, 1),
                            Email = "patrick.star@bikinibottom.com",
                            IsActive = true,
                            LastName = "Star",
                            Name = "Patrick",
                            Password = "AQAAAAIAAYagAAAAEMfA2QyJTuJy1L+AZWY3WHvgxEEExNFj7CFRbPZTbnOX97ZQ7RbKrSI1W/140sMp1A==",
                            Role = 0
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateOnly(2005, 3, 9),
                            Email = "lisa.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Lisa",
                            Password = "AQAAAAIAAYagAAAAEBq4cX1NDG4uyEs3v0zLQz3faR7805YcbnqYZ8yi5nRWNeabCGQ2+9XTeSrKu4y3Sw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateOnly(1960, 10, 1),
                            Email = "marge.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Marge",
                            Password = "AQAAAAIAAYagAAAAEKw64HCi2M+fqGFzP+VfLWreW6g3OPuVr8hssx/Gy/fe7RIhQNy5wu+ayPkr662sYw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateOnly(2018, 7, 14),
                            Email = "stewie.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Stewie",
                            Password = "AQAAAAIAAYagAAAAECapunPNxGxZLHEd2hsUWJBoy6ozXX5zQLHWurboNEo8s8zXxU6aPS+em7svVy28bQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateOnly(2010, 11, 2),
                            Email = "brian.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Brian",
                            Password = "AQAAAAIAAYagAAAAEIgXSlUCjkMotRgbuZvvwW3QXh08hMYkQ1J8oQBPFjxCBf9mMWdaOewk9h5zwsZARw==",
                            Role = 1
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateOnly(1990, 6, 18),
                            Email = "sandy.cheeks@bikinibottom.com",
                            IsActive = true,
                            LastName = "Cheeks",
                            Name = "Sandy",
                            Password = "AQAAAAIAAYagAAAAENiA3s63t6slaJTdkdoUd8oSNDg1tK6R7PFmwGAMRUiqtDRmFFZFpjvNaCvGeZftqQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 11,
                            DateOfBirth = new DateOnly(1982, 4, 10),
                            Email = "squidward@bikinibottom.com",
                            IsActive = true,
                            LastName = "Tentacles",
                            Name = "Squidward",
                            Password = "AQAAAAIAAYagAAAAEESegEzBC59RGKcd03Qk/RMU6hK4ZPwiyi/rXvwACm4m/0dg7+8rZ5ELn/TSL34OlQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 12,
                            DateOfBirth = new DateOnly(1970, 7, 5),
                            Email = "mr.krabs@bikinibottom.com",
                            IsActive = true,
                            LastName = "Krabs",
                            Name = "Mr",
                            Password = "AQAAAAIAAYagAAAAEFZa4/5WUFT/PG1aeY5Q1uAHLLTo6GU8hWmgQJFp2gx2vgxcUGhF2YGxB2XcxIo/uQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 13,
                            DateOfBirth = new DateOnly(1972, 8, 22),
                            Email = "plankton@bikinibottom.com",
                            IsActive = true,
                            LastName = "Plankton",
                            Name = "Sheldon",
                            Password = "AQAAAAIAAYagAAAAECVFibw/44MOsGebbFCuctc2n+fCP9FETQ4avq5jMlTGSLpV711N7RNPNthMJ9ybuQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 14,
                            DateOfBirth = new DateOnly(2007, 4, 1),
                            Email = "bart.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Bart",
                            Password = "AQAAAAIAAYagAAAAELD59XNBBA6Z+51strwBk9Rzavgz7w1s4v63w2WsyKkNEoGOBPK3v893kAC26lX6+w==",
                            Role = 0
                        },
                        new
                        {
                            Id = 15,
                            DateOfBirth = new DateOnly(2003, 8, 21),
                            Email = "meg.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Meg",
                            Password = "AQAAAAIAAYagAAAAEEIE2aXp6XsydbzdaAGNFPi+Hfs8qpTu/EQFnItKjxkFI6PVryD8Zrpnb2eviuEmLQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 16,
                            DateOfBirth = new DateOnly(1975, 3, 3),
                            Email = "lois.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Lois",
                            Password = "AQAAAAIAAYagAAAAEFWlXzM06yQuR/zJsWsFe9t5AMVRRiBTd1G9MLA/ttJM6gfXGsCsZkpDsnEM0s+Eaw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 17,
                            DateOfBirth = new DateOnly(2001, 2, 12),
                            Email = "chris.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Chris",
                            Password = "AQAAAAIAAYagAAAAECkPn8ehCVRpkrQKmoRqBoEfXnPIrH+rbN6tCFn9fiah5oI3zkTDUMWzP3K3yY+OLQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 18,
                            DateOfBirth = new DateOnly(1965, 2, 9),
                            Email = "ned.flanders@springfield.com",
                            IsActive = true,
                            LastName = "Flanders",
                            Name = "Ned",
                            Password = "AQAAAAIAAYagAAAAEIHjxhC6g/lrAbkjXRgVG9v0PzC+WEWpOAyjNmDe2TDq2pip+uzychOaWY2zkKtSqQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 19,
                            DateOfBirth = new DateOnly(1963, 11, 5),
                            Email = "moe.szyslak@springfield.com",
                            IsActive = true,
                            LastName = "Szyslak",
                            Name = "Moe",
                            Password = "AQAAAAIAAYagAAAAEA67T2GRrhfhWyfDSjIl5pxEQ5vaUwbIs9ZYcu9EaVvtJmZ+7rZL7+B5l+/relxgmQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 20,
                            DateOfBirth = new DateOnly(1970, 4, 14),
                            Email = "carl.carlson@springfield.com",
                            IsActive = true,
                            LastName = "Carlson",
                            Name = "Carl",
                            Password = "AQAAAAIAAYagAAAAEELMI+lVrTlrEAIx09FdBUsj4YBUXnziw8/FxsJ5xWVJeqfkcpn0LxTnDoyLrMlAMg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 21,
                            DateOfBirth = new DateOnly(1970, 6, 6),
                            Email = "lenny.leonard@springfield.com",
                            IsActive = true,
                            LastName = "Leonard",
                            Name = "Lenny",
                            Password = "AQAAAAIAAYagAAAAECRgejY0o9uxmD26n8tLjoMzk/VnKhB8BpaVc4WwfKaJ3RBkJesTYcwjKUS5sPAJyw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 22,
                            DateOfBirth = new DateOnly(1930, 9, 15),
                            Email = "mr.burns@springfield.com",
                            IsActive = true,
                            LastName = "Burns",
                            Name = "Mr",
                            Password = "AQAAAAIAAYagAAAAEEOP0C6ds6vuUtHrwQZjsNnPnz+QsJY/fIKkHU5KlquWV8IAJ9RWpqYrhf0MzxrcEA==",
                            Role = 1
                        },
                        new
                        {
                            Id = 23,
                            DateOfBirth = new DateOnly(1968, 7, 30),
                            Email = "smithers@springfield.com",
                            IsActive = true,
                            LastName = "Smithers",
                            Name = "Waylon",
                            Password = "AQAAAAIAAYagAAAAEJhPgF+TObeNTJC8Ikb0fifsLzm4iPiGR11MV7wUcwzVnEd5olwvTSpJp15UIwZCwA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 24,
                            DateOfBirth = new DateOnly(2012, 2, 14),
                            Email = "ralph.wiggum@springfield.com",
                            IsActive = true,
                            LastName = "Wiggum",
                            Name = "Ralph",
                            Password = "AQAAAAIAAYagAAAAEPcGKr2pyMH7w45HDPHv7zyIq+KfBW5Y+NXA2AWY6yGTYBCn07WGkkhK7wJr5wDqaQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 25,
                            DateOfBirth = new DateOnly(1971, 12, 7),
                            Email = "apu@springfield.com",
                            IsActive = true,
                            LastName = "Nahasapeemapetilon",
                            Name = "Apu",
                            Password = "AQAAAAIAAYagAAAAEGN/YF6zWYRu/Iq1WR85JXuk86sYw6WwjF1+NLGuV4ioW3uhtMq186foDASdmb0uIA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 26,
                            DateOfBirth = new DateOnly(2006, 7, 1),
                            Email = "milhouse@springfield.com",
                            IsActive = true,
                            LastName = "Van Houten",
                            Name = "Milhouse",
                            Password = "AQAAAAIAAYagAAAAEN/EaHftFQzqraUiItb1kY7p8I+tvXGwZkCZLV+uzjNWBWLHPkbOoEo6usCvS6RFKQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 27,
                            DateOfBirth = new DateOnly(1975, 1, 1),
                            Email = "comic.bookguy@springfield.com",
                            IsActive = true,
                            LastName = "Book Guy",
                            Name = "Comic",
                            Password = "AQAAAAIAAYagAAAAEPEChHCilFfdDqJcbpVp3qcpW+kCESRYCrVJpuQlzyD0F+bIlhgUS1k2SUn5A1KMEA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 28,
                            DateOfBirth = new DateOnly(1960, 11, 1),
                            Email = "edna.krabappel@springfield.com",
                            IsActive = true,
                            LastName = "Krabappel",
                            Name = "Edna",
                            Password = "AQAAAAIAAYagAAAAELXaR1HGuqRlSt2jS93KQ0paIFvrN+dM8FHjKc2D9vUjyAPjxAhOiZPK3qWj+MWuzw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 29,
                            DateOfBirth = new DateOnly(1961, 5, 30),
                            Email = "seymour.skinner@springfield.com",
                            IsActive = true,
                            LastName = "Skinner",
                            Name = "Principal",
                            Password = "AQAAAAIAAYagAAAAEJ7NqlB0lhrY+Zr3Q4UixTlW3mgh8NFtGuYo088jhoOqzieaf4Vbtq9rc5PLfbURbg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 30,
                            DateOfBirth = new DateOnly(1962, 6, 1),
                            Email = "willie@springfield.com",
                            IsActive = true,
                            LastName = "Willie",
                            Name = "Groundskeeper",
                            Password = "AQAAAAIAAYagAAAAEDTHfRgKh2y8hLJwWHR5fp9O2kWZSimwqjUGFtQnQtSpEJgzC0bFAnsJ4kk3LS7wqw==",
                            Role = 0
                        });
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DecidedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DecidedByUserId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Absence", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("TimeEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("Vacations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Team", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Navigation("TimeEntries");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}
