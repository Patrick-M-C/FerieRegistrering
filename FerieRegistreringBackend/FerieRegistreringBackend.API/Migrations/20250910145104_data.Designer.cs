// <auto-generated />
using System;
using FerieRegistreringBackend.Repository.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FerieRegistreringBackend.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250910145104_data")]
    partial class data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LeaderUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            CreatedAtUtc = new DateTime(2025, 9, 10, 14, 51, 4, 301, DateTimeKind.Utc).AddTicks(6174),
                            Description = "The Springfield team",
                            IsActive = true,
                            LeaderUserId = 1,
                            Name = "Springfield"
                        },
                        new
                        {
                            TeamId = 2,
                            CreatedAtUtc = new DateTime(2025, 9, 10, 14, 51, 4, 301, DateTimeKind.Utc).AddTicks(6179),
                            Description = "The Quahog team",
                            IsActive = true,
                            LeaderUserId = 4,
                            Name = "Quahog"
                        },
                        new
                        {
                            TeamId = 3,
                            CreatedAtUtc = new DateTime(2025, 9, 10, 14, 51, 4, 301, DateTimeKind.Utc).AddTicks(6247),
                            Description = "The Bikini Bottom team",
                            IsActive = true,
                            LeaderUserId = 5,
                            Name = "Bikini Bottom"
                        });
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TimeEntries");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateOnly(1995, 5, 12),
                            Email = "niklas@example.com",
                            IsActive = true,
                            LastName = "Hansen",
                            Name = "Niklas",
                            Password = "AQAAAAIAAYagAAAAEFaud54Hyvtkep5p2uHHuUXJB/+fHM1yIBONCJgc2Hpz0OwlnfBuds8EqL7eVDpZWg==",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateOnly(1980, 5, 19),
                            Email = "frygtsommehund@example.com",
                            IsActive = true,
                            LastName = "Hund",
                            Name = "Frygtløss",
                            Password = "AQAAAAIAAYagAAAAEMsaeL9m8WhE57l9D/h2AaQMVXpGxwDgc4TOiGZ8BklPz2HPBKS8CkCTD1eCRTKbqg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateOnly(1956, 5, 12),
                            Email = "homer.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Homer",
                            Password = "AQAAAAIAAYagAAAAEGtZuzq8q9I3oMwtfjs/V8RNuhoHiG9nFjT1vndbqkk3Zufsy2H6yZ3a1fv2dbb2Cg==",
                            Role = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateOnly(1966, 7, 1),
                            Email = "peter.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Peter",
                            Password = "AQAAAAIAAYagAAAAEG6NMO7aX4Uv4cD8qYj4hiTYLINHorf6fmQziVdozpt1maJmibw5fRQTj396XxU2PQ==",
                            Role = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateOnly(1999, 5, 1),
                            Email = "patrick.star@bikinibottom.com",
                            IsActive = true,
                            LastName = "Star",
                            Name = "Patrick",
                            Password = "AQAAAAIAAYagAAAAELM674PItqQQO/pxOP0qh3V0k4z/5fEnPNl0/jvfKMaeed+fF5oHnzZJebHZ/BL7oQ==",
                            Role = 0,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateOnly(2005, 3, 9),
                            Email = "lisa.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Lisa",
                            Password = "AQAAAAIAAYagAAAAEBkRUi7DNHTEkKhyPXbf5RpUM7YAgVssuGuohHu1z+aeft9YfwcNMnPCEWMx6S7Exw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateOnly(1960, 10, 1),
                            Email = "marge.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Marge",
                            Password = "AQAAAAIAAYagAAAAEDkkWdarHBa6iQhuvXmiUmv2TYq38RFac2us/bXve/A8DI3Ago4LDB3R+f3oniaUOQ==",
                            Role = 0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateOnly(2018, 7, 14),
                            Email = "stewie.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Stewie",
                            Password = "AQAAAAIAAYagAAAAEKbu6C+J6AWO2I660871Fpg20vABXLRI8qlOmRjA2Qh+8fy/vW9vmDlQvc03aggRQQ==",
                            Role = 0,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateOnly(2010, 11, 2),
                            Email = "brian.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Brian",
                            Password = "AQAAAAIAAYagAAAAEN+7Bq1qGsmmi2sRSB+vpkvq1zOztGy7oApuwBhiroPk2b8XFY0KECF9fbIo7yNCpg==",
                            Role = 1,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateOnly(1990, 6, 18),
                            Email = "sandy.cheeks@bikinibottom.com",
                            IsActive = true,
                            LastName = "Cheeks",
                            Name = "Sandy",
                            Password = "AQAAAAIAAYagAAAAEK8RSVyz05f0FqPW1mxB4eFZ7EfbKsK1/1qdX5XUc3NLo0m9gK9mSbe8HDrdbJ84Mw==",
                            Role = 0,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 11,
                            DateOfBirth = new DateOnly(1982, 4, 10),
                            Email = "squidward@bikinibottom.com",
                            IsActive = true,
                            LastName = "Tentacles",
                            Name = "Squidward",
                            Password = "AQAAAAIAAYagAAAAEHXcyoPF1k3n1IA6xTEEExk5gOWOllah3tvOJdlPav+aoc82eZGWQ2p+Qn95kkvGgw==",
                            Role = 0,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 12,
                            DateOfBirth = new DateOnly(1970, 7, 5),
                            Email = "mr.krabs@bikinibottom.com",
                            IsActive = true,
                            LastName = "Krabs",
                            Name = "Mr",
                            Password = "AQAAAAIAAYagAAAAEIf8eTDlmKtrb1HRtlS1CMEP1WhgTwzFB9FR/Iw9y9hrLHCM0pIGPsCura1SfLWovA==",
                            Role = 1,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 13,
                            DateOfBirth = new DateOnly(1972, 8, 22),
                            Email = "plankton@bikinibottom.com",
                            IsActive = true,
                            LastName = "Plankton",
                            Name = "Sheldon",
                            Password = "AQAAAAIAAYagAAAAEPkseQGWfbShg+J2LAgkyD5BJpvJKojxPsayVFHHr3EHD0BmRhcq64dobTuYJ011ng==",
                            Role = 0,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 14,
                            DateOfBirth = new DateOnly(2007, 4, 1),
                            Email = "bart.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Bart",
                            Password = "AQAAAAIAAYagAAAAENapsashro3wrZRhASRVYKC76QDeYfceTpPkfZZlAMPyZwkoJ61s43mcEbAM+lQ+VQ==",
                            Role = 0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 15,
                            DateOfBirth = new DateOnly(2003, 8, 21),
                            Email = "meg.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Meg",
                            Password = "AQAAAAIAAYagAAAAEOUH123hkpe5kNrbC3rjPHzLH96Kc2LIVfs5DwSvkQWOfUU3Bz1a4vgCbFClF+HccA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 16,
                            DateOfBirth = new DateOnly(1975, 3, 3),
                            Email = "lois.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Lois",
                            Password = "AQAAAAIAAYagAAAAEFZuYT6CKN9XF+Ld/9o0Pe3VOBh/0PetpbmOAEjy1s9bRcK/ffjcyIlYafxziLLbDw==",
                            Role = 0,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 17,
                            DateOfBirth = new DateOnly(2001, 2, 12),
                            Email = "chris.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Chris",
                            Password = "AQAAAAIAAYagAAAAEB+iivApc3AoIsyjkprrsJzMRq6e2+J0ILu03/999Yw9S4+j3AjSAEls7kUCF2Qh3A==",
                            Role = 0
                        },
                        new
                        {
                            Id = 18,
                            DateOfBirth = new DateOnly(1965, 2, 9),
                            Email = "ned.flanders@springfield.com",
                            IsActive = true,
                            LastName = "Flanders",
                            Name = "Ned",
                            Password = "AQAAAAIAAYagAAAAEEuFeIHIdm4rhhrQRmdYLm3LG1jsUDQn+g+j1+u8iArQchGH4FY899wexCLQRi9SVA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 19,
                            DateOfBirth = new DateOnly(1963, 11, 5),
                            Email = "moe.szyslak@springfield.com",
                            IsActive = true,
                            LastName = "Szyslak",
                            Name = "Moe",
                            Password = "AQAAAAIAAYagAAAAENWVb3jfA+2VD0hc8srTILQ3YETIzTCW6ptvsrE4eAucnALvxZ/yQBs1lxGbuBrTQw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 20,
                            DateOfBirth = new DateOnly(1970, 4, 14),
                            Email = "carl.carlson@springfield.com",
                            IsActive = true,
                            LastName = "Carlson",
                            Name = "Carl",
                            Password = "AQAAAAIAAYagAAAAEIPX2JR3pbtLWauHXbto9iwnWXBjwuyaZSf7JpqBOS7E5AOP52qP+p0PCqTLPrLf2g==",
                            Role = 0
                        },
                        new
                        {
                            Id = 21,
                            DateOfBirth = new DateOnly(1970, 6, 6),
                            Email = "lenny.leonard@springfield.com",
                            IsActive = true,
                            LastName = "Leonard",
                            Name = "Lenny",
                            Password = "AQAAAAIAAYagAAAAEOP1XeH+IHYsmoFzbMUaIzU2Cybkjv8TUl+2II/7q/jys23NA56KUf211T8tzO6FyQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 22,
                            DateOfBirth = new DateOnly(1930, 9, 15),
                            Email = "mr.burns@springfield.com",
                            IsActive = true,
                            LastName = "Burns",
                            Name = "Mr",
                            Password = "AQAAAAIAAYagAAAAEFHl6aRWw1DvYsekbtU+hdBeLjOuMJISKe+XoUmbwk5rh2XS+pjG/og65056uh9GEQ==",
                            Role = 1
                        },
                        new
                        {
                            Id = 23,
                            DateOfBirth = new DateOnly(1968, 7, 30),
                            Email = "smithers@springfield.com",
                            IsActive = true,
                            LastName = "Smithers",
                            Name = "Waylon",
                            Password = "AQAAAAIAAYagAAAAEP/3/tFdJUjIL7rnB+ZdwgWthhOsw1j8RfQrKfN8v2neLl8oeo4OaUcWRouO8S9efg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 24,
                            DateOfBirth = new DateOnly(2012, 2, 14),
                            Email = "ralph.wiggum@springfield.com",
                            IsActive = true,
                            LastName = "Wiggum",
                            Name = "Ralph",
                            Password = "AQAAAAIAAYagAAAAEBliMOPllQv5aNwI/F04objYVV8mwApXJAFMh6OpHcq7uDeMsTTjZJVHLBn3uN9Umg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 25,
                            DateOfBirth = new DateOnly(1971, 12, 7),
                            Email = "apu@springfield.com",
                            IsActive = true,
                            LastName = "Nahasapeemapetilon",
                            Name = "Apu",
                            Password = "AQAAAAIAAYagAAAAEIfKTxCsBxJYeSe7qO0BbcQG83su2A6d9U9PamaRjjUmKqCA447aSqCqh1/SYqY22Q==",
                            Role = 0
                        },
                        new
                        {
                            Id = 26,
                            DateOfBirth = new DateOnly(2006, 7, 1),
                            Email = "milhouse@springfield.com",
                            IsActive = true,
                            LastName = "Van Houten",
                            Name = "Milhouse",
                            Password = "AQAAAAIAAYagAAAAEP7ISTjKQc7y3oto2awu7Ebe2g5tl/wPS/YpUpxJjyjhvOLqYW41p6r+9JrF0OBJ/A==",
                            Role = 0
                        },
                        new
                        {
                            Id = 27,
                            DateOfBirth = new DateOnly(1975, 1, 1),
                            Email = "comic.bookguy@springfield.com",
                            IsActive = true,
                            LastName = "Book Guy",
                            Name = "Comic",
                            Password = "AQAAAAIAAYagAAAAEJH7wmHm7McHtdAk/8lI3FpRMZkblkuDfZf71iP/R0yJBpt22qr+uCYDMT1jTn1yzg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 28,
                            DateOfBirth = new DateOnly(1960, 11, 1),
                            Email = "edna.krabappel@springfield.com",
                            IsActive = true,
                            LastName = "Krabappel",
                            Name = "Edna",
                            Password = "AQAAAAIAAYagAAAAELickf6Ol98vwSnlTJWKtmWFkP4U3ohJP7tjnJCLvz0H1N2U5QxCgTIol5fM7FXPdA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 29,
                            DateOfBirth = new DateOnly(1961, 5, 30),
                            Email = "seymour.skinner@springfield.com",
                            IsActive = true,
                            LastName = "Skinner",
                            Name = "Principal",
                            Password = "AQAAAAIAAYagAAAAEJ/Wr0PLhlNcwwrpPHvxe0uJGQDzoXQ0VsLCw+cFw+Xb9esH1QP4+ZUihwJi48h0NQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 30,
                            DateOfBirth = new DateOnly(1962, 6, 1),
                            Email = "willie@springfield.com",
                            IsActive = true,
                            LastName = "Willie",
                            Name = "Groundskeeper",
                            Password = "AQAAAAIAAYagAAAAEGD1Pduxcg6Fi4tnQmVZM2mWYSonTOG+rvDMo2+2h1rRwMZwdYlZiiZw9aeAEBQJ8Q==",
                            Role = 0
                        });
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DecidedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DecidedByUserId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Absence", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("TimeEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("Vacations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Team", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Navigation("TimeEntries");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}
