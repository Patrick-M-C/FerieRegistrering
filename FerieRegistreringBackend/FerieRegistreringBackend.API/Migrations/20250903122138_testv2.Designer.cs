// <auto-generated />
using System;
using FerieRegistreringBackend.Repository.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FerieRegistreringBackend.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250903122138_testv2")]
    partial class testv2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LeaderUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TimeEntries");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateOnly(1995, 5, 12),
                            Email = "niklas@example.com",
                            IsActive = true,
                            LastName = "Hansen",
                            Name = "Niklas",
                            Password = "AQAAAAIAAYagAAAAELDiYvVgN0PP06kliDKcA3vsrCY4q1JAcrFTDYukE1e71KhkMmVaejLpZ+o5EGYRKQ==",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateOnly(1980, 5, 19),
                            Email = "frygtsommehund@example.com",
                            IsActive = true,
                            LastName = "Hund",
                            Name = "Frygtløss",
                            Password = "AQAAAAIAAYagAAAAEO6vX7Gr1HaWPhLk06BE/bzdBp4VvFOXdoMK3NqJU5vP1b2oxi+mqMhtbJwVe/frSQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateOnly(1956, 5, 12),
                            Email = "homer.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Homer",
                            Password = "AQAAAAIAAYagAAAAEHjunXZImTP+/ggjNkUhQd1sl+j9X6uZE0umoQBhDwL1EdlHYapidAGMOq3HuCHTlQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateOnly(1966, 7, 1),
                            Email = "peter.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Peter",
                            Password = "AQAAAAIAAYagAAAAEG2W6aMS7DYYSA+xBzz6VTDYYJSV0hOvsCD9cOQf97zVyhLMUyG6wFvZER0QG4QUbQ==",
                            Role = 1
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateOnly(1999, 5, 1),
                            Email = "patrick.star@bikinibottom.com",
                            IsActive = true,
                            LastName = "Star",
                            Name = "Patrick",
                            Password = "AQAAAAIAAYagAAAAEPM+P1cXaC9gi/uqkef3F2wQq3q4+QEnIKgKnR2y14PW9Lz/BGsQs+/PGphOiPUSpw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateOnly(2005, 3, 9),
                            Email = "lisa.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Lisa",
                            Password = "AQAAAAIAAYagAAAAEJQlGs0y/Hs7qqjjnepHfxZ45+aRt7cdWV6hWP6UlwQKnf8P+di0vuTAhBD0+l0JEg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateOnly(1960, 10, 1),
                            Email = "marge.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Marge",
                            Password = "AQAAAAIAAYagAAAAEL85YKt74o6y16O8ik+vSnj9bXyiuAwvFqIs/M+yeQukOWHITELiWmd2EPlZt+dt0g==",
                            Role = 0
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateOnly(2018, 7, 14),
                            Email = "stewie.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Stewie",
                            Password = "AQAAAAIAAYagAAAAEIxVLfhhH1TsM+ndsJ7q13tZXmMCz356xkm2gYlTuY11WdHERUmmofD89NBYlyTeJQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateOnly(2010, 11, 2),
                            Email = "brian.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Brian",
                            Password = "AQAAAAIAAYagAAAAEIs1gZ+ziEKXLlaWrW1qjeBChOrsErftGhx7Mp016RXRTeXQlWeRalDT25BdTjIr0A==",
                            Role = 1
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateOnly(1990, 6, 18),
                            Email = "sandy.cheeks@bikinibottom.com",
                            IsActive = true,
                            LastName = "Cheeks",
                            Name = "Sandy",
                            Password = "AQAAAAIAAYagAAAAEGIPZQs69ta8MJ4Vr1v4KEzpYlIXMoGy7xiDnXNZpc/ZdwHro5ESJWhzg3OryqnYIA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 11,
                            DateOfBirth = new DateOnly(1982, 4, 10),
                            Email = "squidward@bikinibottom.com",
                            IsActive = true,
                            LastName = "Tentacles",
                            Name = "Squidward",
                            Password = "AQAAAAIAAYagAAAAEHZPeyUHZmM32eWyFqhb9CN9RxNbJwmWd4BT3c4o0Ip2g9taVptTNfwcAcv0AuaUFA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 12,
                            DateOfBirth = new DateOnly(1970, 7, 5),
                            Email = "mr.krabs@bikinibottom.com",
                            IsActive = true,
                            LastName = "Krabs",
                            Name = "Mr",
                            Password = "AQAAAAIAAYagAAAAEJ7CbOCliOJTncY/5EabvWn0gdQT4FU/dXcenE60X8ixJw/nYeNN+T/+vEHZyBEzMA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 13,
                            DateOfBirth = new DateOnly(1972, 8, 22),
                            Email = "plankton@bikinibottom.com",
                            IsActive = true,
                            LastName = "Plankton",
                            Name = "Sheldon",
                            Password = "AQAAAAIAAYagAAAAEGlHHJVi8fHkNsbvtZ7usFWgy0kU5rVPNTlbUZ2PHxp+eASXZDg28vkVtcFrSKa97w==",
                            Role = 0
                        },
                        new
                        {
                            Id = 14,
                            DateOfBirth = new DateOnly(2007, 4, 1),
                            Email = "bart.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Bart",
                            Password = "AQAAAAIAAYagAAAAEANGPeg35L69YK3GwRaCYbiKAP421OpwlPlMw6FUhZf5EmdTvxCOfy7DNDzJiqWBoQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 15,
                            DateOfBirth = new DateOnly(2003, 8, 21),
                            Email = "meg.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Meg",
                            Password = "AQAAAAIAAYagAAAAEKZ9fr60gALwcO9jtPqAetJ7aky3jrKMQs85hihyUWampzvW/oW6pwA9LkdiVmPxkw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 16,
                            DateOfBirth = new DateOnly(1975, 3, 3),
                            Email = "lois.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Lois",
                            Password = "AQAAAAIAAYagAAAAEI5CQL4R002T/MljHizvF+zMsH0euig+3gnrEOs2Ax3biP5YMChafslEYUWZbqzbyA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 17,
                            DateOfBirth = new DateOnly(2001, 2, 12),
                            Email = "chris.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Chris",
                            Password = "AQAAAAIAAYagAAAAELZKBZYGOnEPmnGxVlMH51fWF5jmjGgkLmegvMoTPwixZMx/e/xOWf0i4jMA7Ai18w==",
                            Role = 0
                        },
                        new
                        {
                            Id = 18,
                            DateOfBirth = new DateOnly(1965, 2, 9),
                            Email = "ned.flanders@springfield.com",
                            IsActive = true,
                            LastName = "Flanders",
                            Name = "Ned",
                            Password = "AQAAAAIAAYagAAAAEAwcg+xSF0/fVG8wWY5H01NpTL+qJi/NGzFmnV7rlnXjwVoK8AqCRkGvgaFAb97ZLA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 19,
                            DateOfBirth = new DateOnly(1963, 11, 5),
                            Email = "moe.szyslak@springfield.com",
                            IsActive = true,
                            LastName = "Szyslak",
                            Name = "Moe",
                            Password = "AQAAAAIAAYagAAAAEBxLQ5RnsEG+2XqHm/nqpwaersb0bv9aLyG28kPLKcbJYEoaeD0D6yk/rIjTpCcccQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 20,
                            DateOfBirth = new DateOnly(1970, 4, 14),
                            Email = "carl.carlson@springfield.com",
                            IsActive = true,
                            LastName = "Carlson",
                            Name = "Carl",
                            Password = "AQAAAAIAAYagAAAAEA2Ryq3uv4iK4bLrkZ/KuoRwInp694CGNMKDeF/aYqhbyiQ36J2nUuhi+tYRd/93LQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 21,
                            DateOfBirth = new DateOnly(1970, 6, 6),
                            Email = "lenny.leonard@springfield.com",
                            IsActive = true,
                            LastName = "Leonard",
                            Name = "Lenny",
                            Password = "AQAAAAIAAYagAAAAEGExSNB6g24w03M4KQuwNR9ggX+zeG+707Zc6RZk4qQx0zMgkr3moCu5F4pBBEFVuQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 22,
                            DateOfBirth = new DateOnly(1930, 9, 15),
                            Email = "mr.burns@springfield.com",
                            IsActive = true,
                            LastName = "Burns",
                            Name = "Mr",
                            Password = "AQAAAAIAAYagAAAAEF84m8qteXWU4WjXONYSEE3daZBxawhy2AQjYLV4og+guREUzetgpuekZtCe0YiuVg==",
                            Role = 1
                        },
                        new
                        {
                            Id = 23,
                            DateOfBirth = new DateOnly(1968, 7, 30),
                            Email = "smithers@springfield.com",
                            IsActive = true,
                            LastName = "Smithers",
                            Name = "Waylon",
                            Password = "AQAAAAIAAYagAAAAEFaK9iqb5voBh1cx1b7yS7ovYu1ARY0DwmTh8QgstkNkTwhLi7Lr4dt36RY3cl4ckQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 24,
                            DateOfBirth = new DateOnly(2012, 2, 14),
                            Email = "ralph.wiggum@springfield.com",
                            IsActive = true,
                            LastName = "Wiggum",
                            Name = "Ralph",
                            Password = "AQAAAAIAAYagAAAAEPeGlF8h2spjc9Ku9sgda4dh33x0QmbyNdtoDxL5cYGpih3qR1LrVT96Mm+R4RzByw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 25,
                            DateOfBirth = new DateOnly(1971, 12, 7),
                            Email = "apu@springfield.com",
                            IsActive = true,
                            LastName = "Nahasapeemapetilon",
                            Name = "Apu",
                            Password = "AQAAAAIAAYagAAAAEHsMJen9L2Jstpo1ZgIEWC2vCxcRr33FMtSK4mrquKlAN3LSc2ET9jgm0145d5d/yw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 26,
                            DateOfBirth = new DateOnly(2006, 7, 1),
                            Email = "milhouse@springfield.com",
                            IsActive = true,
                            LastName = "Van Houten",
                            Name = "Milhouse",
                            Password = "AQAAAAIAAYagAAAAEGXK3tu8IMPKwcTzOMiMdeEgLW+gMc9QN0AsjWMi5TRhEgP6T9z+22nVIolQHk5Zfw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 27,
                            DateOfBirth = new DateOnly(1975, 1, 1),
                            Email = "comic.bookguy@springfield.com",
                            IsActive = true,
                            LastName = "Book Guy",
                            Name = "Comic",
                            Password = "AQAAAAIAAYagAAAAENP/1kshLTlgOBTEDmLBlhNbE+mddRoHUjay+FgJEJiic4PePQXrAqOfAFCzvBdmWw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 28,
                            DateOfBirth = new DateOnly(1960, 11, 1),
                            Email = "edna.krabappel@springfield.com",
                            IsActive = true,
                            LastName = "Krabappel",
                            Name = "Edna",
                            Password = "AQAAAAIAAYagAAAAEGJniq+dn+BQ886BjbL5dV757VziCcX9qPAPQSEp2Ds6CBqeDLkxJTdpOzJdlOZoVQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 29,
                            DateOfBirth = new DateOnly(1961, 5, 30),
                            Email = "seymour.skinner@springfield.com",
                            IsActive = true,
                            LastName = "Skinner",
                            Name = "Principal",
                            Password = "AQAAAAIAAYagAAAAEPbrU159VNsb27F9UL4BM28F6ke+nRbJv3SbF5gwQIJjpmqqGmXmSrrJ/0JCkJ1LzA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 30,
                            DateOfBirth = new DateOnly(1962, 6, 1),
                            Email = "willie@springfield.com",
                            IsActive = true,
                            LastName = "Willie",
                            Name = "Groundskeeper",
                            Password = "AQAAAAIAAYagAAAAECjwxmPbNVr5JwKnmDyPiQt9jKbBVJp+XEdMVyAbFQP43p109oSzjE5Q29+r05ukVQ==",
                            Role = 0
                        });
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DecidedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DecidedByUserId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Absence", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("TimeEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("Vacations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Team", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Navigation("TimeEntries");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}
