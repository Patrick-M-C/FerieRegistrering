// <auto-generated />
using System;
using FerieRegistreringBackend.Repository.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FerieRegistreringBackend.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Absence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LeaderUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TimeEntries");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateOnly(1995, 5, 12),
                            Email = "niklas@example.com",
                            IsActive = true,
                            LastName = "Hansen",
                            Name = "Niklas",
                            Password = "AQAAAAIAAYagAAAAEBFGP99GHeOFv1RbqNRhPVZh1EDPFIKdnyBcTZE2YfkqttQJZPBZc8j/E8QLTIe46w==",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateOnly(1980, 5, 19),
                            Email = "frygtsommehund@example.com",
                            IsActive = true,
                            LastName = "Hund",
                            Name = "Frygtløss",
                            Password = "AQAAAAIAAYagAAAAECiNbPyRpeF6AMcwqbwQHRE4+dEyMwUFwo8Ws8M9CibXWX9E6+CYqfRVeJgxkrlbkQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateOnly(1956, 5, 12),
                            Email = "homer.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Homer",
                            Password = "AQAAAAIAAYagAAAAEHD+Iu5kZXJZFNZQvpV/3Xfqu4i7WH9dpM9lrAUD/X+lfVDVVeg9xIkKR5rvSl1ZPw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateOnly(1966, 7, 1),
                            Email = "peter.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Peter",
                            Password = "AQAAAAIAAYagAAAAEJ0uGyidMTTv2xM3V9dF8RQ6ENdjxiufIOc6h+1bJnMRZSq+fAaO5IhnpUo7LmGLmQ==",
                            Role = 1
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateOnly(1999, 5, 1),
                            Email = "patrick.star@bikinibottom.com",
                            IsActive = true,
                            LastName = "Star",
                            Name = "Patrick",
                            Password = "AQAAAAIAAYagAAAAENL75a4YAqu9+MYp0RwEnUepRt7M0RNLnPGTRc5KenmlUf7mTQv6jAX9yYiMevwBsQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateOnly(2005, 3, 9),
                            Email = "lisa.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Lisa",
                            Password = "AQAAAAIAAYagAAAAEHzRZWhLgmfo8LdmmBTzetq6vn6AQX85O0+hJvzFVshY6fMv41iozGTH9tGwN2VaVQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateOnly(1960, 10, 1),
                            Email = "marge.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Marge",
                            Password = "AQAAAAIAAYagAAAAEM/Nhf7/UgD9do3tI7xTK0ejegPA0vKK1HHz8qmkb3pupqlJ6PR/w3gEwbXXOTHJjg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateOnly(2018, 7, 14),
                            Email = "stewie.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Stewie",
                            Password = "AQAAAAIAAYagAAAAEKH0GMuorOP3SeWcaBJH2cvDhuIzYL+Qf9i8HJll7tw8iICqs8BpgHG0QTfr4yy2Ow==",
                            Role = 0
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateOnly(2010, 11, 2),
                            Email = "brian.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Brian",
                            Password = "AQAAAAIAAYagAAAAEGiGumEqdtfEcqzM60SFXeVHpdPj3vhCC4cKawaYysM+CBX21FXPktLGFQduKTjInQ==",
                            Role = 1
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateOnly(1990, 6, 18),
                            Email = "sandy.cheeks@bikinibottom.com",
                            IsActive = true,
                            LastName = "Cheeks",
                            Name = "Sandy",
                            Password = "AQAAAAIAAYagAAAAEISzNeLOu7H63JPstwI4oge/s1PXuYF/m3o0UdpG+1ZR28lXUl050lRdeyn10K31ow==",
                            Role = 0
                        },
                        new
                        {
                            Id = 11,
                            DateOfBirth = new DateOnly(1982, 4, 10),
                            Email = "squidward@bikinibottom.com",
                            IsActive = true,
                            LastName = "Tentacles",
                            Name = "Squidward",
                            Password = "AQAAAAIAAYagAAAAEPHVWGQ3agIzCw/VkuFKNSC6MJc/PJd1fPrCOu4phvJvjsxxofBz7KnQvsYhOBwFpg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 12,
                            DateOfBirth = new DateOnly(1970, 7, 5),
                            Email = "mr.krabs@bikinibottom.com",
                            IsActive = true,
                            LastName = "Krabs",
                            Name = "Mr",
                            Password = "AQAAAAIAAYagAAAAECMh9VhVuMCSCZRZhESrchVvspRau+lyHR8CEMP7SwYzlcoc/bngd/Zeq27HWjB+eg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 13,
                            DateOfBirth = new DateOnly(1972, 8, 22),
                            Email = "plankton@bikinibottom.com",
                            IsActive = true,
                            LastName = "Plankton",
                            Name = "Sheldon",
                            Password = "AQAAAAIAAYagAAAAECgy5cYeZdOZ69AepbaRxI6VjhCrbGOnJUGgt8EUTcD9fL6eTbeJixeOuUYex8J4+g==",
                            Role = 0
                        },
                        new
                        {
                            Id = 14,
                            DateOfBirth = new DateOnly(2007, 4, 1),
                            Email = "bart.simpson@springfield.com",
                            IsActive = true,
                            LastName = "Simpson",
                            Name = "Bart",
                            Password = "AQAAAAIAAYagAAAAEGweDVa90wqzUX06Uk0KiBh23ircw15os8AGhvBdlohb9Es4iOdCTrqhmSuFYvxfag==",
                            Role = 0
                        },
                        new
                        {
                            Id = 15,
                            DateOfBirth = new DateOnly(2003, 8, 21),
                            Email = "meg.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Meg",
                            Password = "AQAAAAIAAYagAAAAEBLgwDod2048GGwddpF67tOXmJzzX3jibQYDWdg+QfAIHmRMv6zJzNbHKN90E72bIw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 16,
                            DateOfBirth = new DateOnly(1975, 3, 3),
                            Email = "lois.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Lois",
                            Password = "AQAAAAIAAYagAAAAEOjzd2o/q2ETPNzTagShgVIY5t7LbaSxxHP22KCIxL9zPp2QZKgG4j50NWck3RtUwg==",
                            Role = 0
                        },
                        new
                        {
                            Id = 17,
                            DateOfBirth = new DateOnly(2001, 2, 12),
                            Email = "chris.griffin@quahog.com",
                            IsActive = true,
                            LastName = "Griffin",
                            Name = "Chris",
                            Password = "AQAAAAIAAYagAAAAEBd2i6pTU89vg2pogW7JiD1GxUgatfXyctAmCsa0j9wrG5IlF2D+KOWAHO5M/znFbQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 18,
                            DateOfBirth = new DateOnly(1965, 2, 9),
                            Email = "ned.flanders@springfield.com",
                            IsActive = true,
                            LastName = "Flanders",
                            Name = "Ned",
                            Password = "AQAAAAIAAYagAAAAEMpoQrLdbMaTpF3JuxN4EzAkaoiMZ2JjFQHpoALHXQOlG8LmmML/s1L+6s8wwlBj3w==",
                            Role = 0
                        },
                        new
                        {
                            Id = 19,
                            DateOfBirth = new DateOnly(1963, 11, 5),
                            Email = "moe.szyslak@springfield.com",
                            IsActive = true,
                            LastName = "Szyslak",
                            Name = "Moe",
                            Password = "AQAAAAIAAYagAAAAELAt3LNVCU2ZbsMRZb61y1+c6hkJkswl+o8SL0xWZ2mXXQIQ34o4/XKg6qh0hVg2+w==",
                            Role = 0
                        },
                        new
                        {
                            Id = 20,
                            DateOfBirth = new DateOnly(1970, 4, 14),
                            Email = "carl.carlson@springfield.com",
                            IsActive = true,
                            LastName = "Carlson",
                            Name = "Carl",
                            Password = "AQAAAAIAAYagAAAAEFZ1Jsrzr6gfI9X+OdaAWZbC041eSfmY0A/DwNhFPl39Y7ebRf16PeRLwSs4/vCTQQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 21,
                            DateOfBirth = new DateOnly(1970, 6, 6),
                            Email = "lenny.leonard@springfield.com",
                            IsActive = true,
                            LastName = "Leonard",
                            Name = "Lenny",
                            Password = "AQAAAAIAAYagAAAAEMLQr68QsLjM/6hfETQ9lJ+Yv59r/Q/VfL3d3K9oj4YHKAc5vjy0kDSHY5MNwK54mA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 22,
                            DateOfBirth = new DateOnly(1930, 9, 15),
                            Email = "mr.burns@springfield.com",
                            IsActive = true,
                            LastName = "Burns",
                            Name = "Mr",
                            Password = "AQAAAAIAAYagAAAAEEbwXy5Xt0iMHW2iEiuDUhVmaKNoynOF9By36FS/1k9TGZt0YibXV2iPBiLJ51uEfQ==",
                            Role = 1
                        },
                        new
                        {
                            Id = 23,
                            DateOfBirth = new DateOnly(1968, 7, 30),
                            Email = "smithers@springfield.com",
                            IsActive = true,
                            LastName = "Smithers",
                            Name = "Waylon",
                            Password = "AQAAAAIAAYagAAAAENbG6uuasqx5LowoxcwBggcjChwrqGcHPDvkzICs9TQn4G5Wb0MvwCrrM4kXBEyC6g==",
                            Role = 0
                        },
                        new
                        {
                            Id = 24,
                            DateOfBirth = new DateOnly(2012, 2, 14),
                            Email = "ralph.wiggum@springfield.com",
                            IsActive = true,
                            LastName = "Wiggum",
                            Name = "Ralph",
                            Password = "AQAAAAIAAYagAAAAEBUkhqIkBcoWHsg1Fv2j1BHLpZei9nheUJ4gHQJpT9LzA0dnNM+BGxgeKtSTobdb0A==",
                            Role = 0
                        },
                        new
                        {
                            Id = 25,
                            DateOfBirth = new DateOnly(1971, 12, 7),
                            Email = "apu@springfield.com",
                            IsActive = true,
                            LastName = "Nahasapeemapetilon",
                            Name = "Apu",
                            Password = "AQAAAAIAAYagAAAAECFbc0WTYflUnjLxVu3FBNubPm1wE2nOK3PUPvYz5JKK9z/1sAkSInkwzUP4HuxekA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 26,
                            DateOfBirth = new DateOnly(2006, 7, 1),
                            Email = "milhouse@springfield.com",
                            IsActive = true,
                            LastName = "Van Houten",
                            Name = "Milhouse",
                            Password = "AQAAAAIAAYagAAAAENUsPfVEbp/L2caUKowVTxhBW8XE0CY6/M2TJJqThtrBgnvD4xxJMZ2Mn+NxYfGTHQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 27,
                            DateOfBirth = new DateOnly(1975, 1, 1),
                            Email = "comic.bookguy@springfield.com",
                            IsActive = true,
                            LastName = "Book Guy",
                            Name = "Comic",
                            Password = "AQAAAAIAAYagAAAAECZqcUSH4yvQ2K5SZqFlkfyLlhVo0e3JASKTAN38DOKP9mj3EHtEmuFVVW2ulwTWoQ==",
                            Role = 0
                        },
                        new
                        {
                            Id = 28,
                            DateOfBirth = new DateOnly(1960, 11, 1),
                            Email = "edna.krabappel@springfield.com",
                            IsActive = true,
                            LastName = "Krabappel",
                            Name = "Edna",
                            Password = "AQAAAAIAAYagAAAAECbxXTOd07IZXYJ8IZdGx5ty355VRn8cJSA4pBlzcXdsWKOukusJvIcOtXMpFjBDcw==",
                            Role = 0
                        },
                        new
                        {
                            Id = 29,
                            DateOfBirth = new DateOnly(1961, 5, 30),
                            Email = "seymour.skinner@springfield.com",
                            IsActive = true,
                            LastName = "Skinner",
                            Name = "Principal",
                            Password = "AQAAAAIAAYagAAAAEKOZMCMy1ToUqdYzW1arFzioWoMbr6WXG2hka2csLhdqYt70IAW2lQv6z5uv7vsdGA==",
                            Role = 0
                        },
                        new
                        {
                            Id = 30,
                            DateOfBirth = new DateOnly(1962, 6, 1),
                            Email = "willie@springfield.com",
                            IsActive = true,
                            LastName = "Willie",
                            Name = "Groundskeeper",
                            Password = "AQAAAAIAAYagAAAAEJKCBHX5XtbVtb33fVoW2omElYtVEcSXzrdvd/RLr/AiTHQNrWD3h+1AVYKbJ9Ew7g==",
                            Role = 0
                        });
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DecidedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DecidedByUserId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("ManagerComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vacations");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Absence", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("TimeEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.Team", "Team")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Team");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("Vacations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Team", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Navigation("TimeEntries");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}
