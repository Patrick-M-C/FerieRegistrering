// <auto-generated />
using System;
using FerieRegistreringBackend.Repository.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FerieRegistreringBackend.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TimeEntries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2025, 8, 20),
                            Description = "Første arbejdsdag efter ferie",
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2025, 8, 21),
                            Description = "Halv arbejdsdag pga. lægebesøg",
                            EndTime = new TimeSpan(0, 16, 30, 0, 0),
                            StartTime = new TimeSpan(0, 10, 30, 0, 0),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2025, 8, 22),
                            Description = "Donut pause hele dagen",
                            EndTime = new TimeSpan(0, 15, 0, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2025, 8, 22),
                            Description = "Lang dag med kode",
                            EndTime = new TimeSpan(0, 18, 15, 0, 0),
                            StartTime = new TimeSpan(0, 9, 15, 0, 0),
                            UserId = 4
                        });
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateOnly(1995, 5, 12),
                            Email = "niklas@example.com",
                            LastName = "Hansen",
                            Name = "Niklas",
                            Password = "test123"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateOnly(1980, 5, 19),
                            Email = "frygtsommehund@example.com",
                            LastName = "frygtsomme hund",
                            Name = "Frygtløss",
                            Password = "password"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateOnly(1956, 5, 12),
                            Email = "homer.simpson@springfield.com",
                            LastName = "Simpson",
                            Name = "Homer",
                            Password = "donuts"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateOnly(1966, 7, 1),
                            Email = "peter.griffin@quahog.com",
                            LastName = "Griffin",
                            Name = "Peter",
                            Password = "lois123"
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateOnly(1999, 5, 1),
                            Email = "patrick.star@bikinibottom.com",
                            LastName = "Star",
                            Name = "Patrick",
                            Password = "mayoi"
                        });
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vacations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateOnly(2025, 12, 12),
                            IsApproved = true,
                            Reason = "Battlefield 6",
                            StartDate = new DateOnly(2025, 10, 10),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateOnly(2023, 7, 20),
                            IsApproved = false,
                            Reason = "Sick leave",
                            StartDate = new DateOnly(2023, 7, 15),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.TimeEntry", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("TimeEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.Vacation", b =>
                {
                    b.HasOne("FerieRegistreringBackend.Repository.Models.User", "User")
                        .WithMany("Vacations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FerieRegistreringBackend.Repository.Models.User", b =>
                {
                    b.Navigation("TimeEntries");

                    b.Navigation("Vacations");
                });
#pragma warning restore 612, 618
        }
    }
}
